def output_result(result: bool) -> None:
    print(f"{result}")


def regexp_compare(char_regex: str, char_inpt: str) -> bool:
    # Wild card regex, empty regex should always return True
    if char_regex == "." or char_regex == "":
        return True
    # Empty input returns always False if regex is not empty
    if char_inpt == "":
        return False
    return char_regex == char_inpt


def match_strings(regex: str, inpt: str) -> bool:
    # Termination case 1: Both strings fully matched
    if regex == "":
        return True

    # Termination case 2: Unequal length mismatch
    if regex == "" and inpt != "":
        return False
    if regex != "" and inpt == "":
        return False

    # Check first character pair with Stage 1 logic
    if not regexp_compare(regex[0], inpt[0]):
        return False

    # Recurse over the rest
    return match_strings(regex[1:], inpt[1:])


def main():
    try:
        user_regex, user_input = input().split("|")
        if user_regex in ["", None]:
            user_regex = ""
        if user_input in ["", None]:
            user_input = ""
    except ValueError:
        print("Invalid input")
        return

    # print(f"Input: '{user_regex}|{user_input}'") # Debug

    result = match_strings(user_regex, user_input)
    output_result(result)


if __name__ == "__main__":
    main()